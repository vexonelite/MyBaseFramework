apply plugin: 'com.android.application'

android {
    compileSdkVersion deps.versions.compileSdk
    //buildToolsVersion deps.versions.buildTools

    // Enable Java 1.8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // Manifest GoogleAppIndexingWarning
        disable 'GoogleAppIndexingWarning'
        //abortOnError false
        //checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "tw.realtime.project.mybaseframework"

        minSdkVersion deps.versions.minSdk
        targetSdkVersion deps.versions.targetSdk
        versionCode deps.versions.versionCode
        versionName deps.versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // AGPBI: {"kind":"error","text":"Program type already present: androidx.annotation.BoolRes","sources":[{}],"tool":"D8"}
        //renderscriptSupportModeEnabled true
    }

    buildTypes {
        debug {
            buildConfigField(
                    deps.ieBuildConfig.types.boolean,
                    deps.ieBuildConfig.keys.debugMode,
                    deps.ieBuildConfig.values.true)
            resValue(
                    deps.ieAppResource.types.string,
                    deps.ieAppResource.keys.appVersion,
                    deps.versions.versionName)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField(
                    deps.ieBuildConfig.types.boolean,
                    deps.ieBuildConfig.keys.debugMode,
                    deps.ieBuildConfig.values.false)
            resValue(
                    deps.ieAppResource.types.string,
                    deps.ieAppResource.keys.appVersion,
                    deps.versions.versionName)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':ie_java_baseframework')
    implementation project(':ie_java_httpstuff')
    implementation project(':ie_rxjava')

    testImplementation "junit:junit:${deps.versions.junit}"
    testImplementation "androidx.test:core:${deps.versions.testCore}"
    androidTestImplementation "androidx.test:runner:${deps.versions.testRunner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${deps.versions.espresso}"

    // Java language implementation
    implementation "androidx.fragment:fragment:${deps.versions.fragmentX}"
    // Kotlin
    //implementation "androidx.fragment:fragment-ktx:${deps.versions.fragmentX}"
    // Testing Fragments in Isolation
    //implementation "androidx.fragment:fragment-testing:${deps.versions.fragmentX}"

    implementation "androidx.recyclerview:recyclerview:${deps.versions.recyclerviewX}"
    //implementation "androidx.swiperefreshlayout:swiperefreshlayout:${deps.versions.swiperefreshlayout}"
    implementation "androidx.cardview:cardview:${deps.versions.cardviewX}"
    implementation "androidx.viewpager2:viewpager2:${deps.versions.viewpager2X}"

    implementation "androidx.appcompat:appcompat:${deps.versions.androidX}"
    implementation "androidx.constraintlayout:constraintlayout:${deps.versions.constraintLayoutX}"

    // [start] added in 2020/07/29
    // Dependency Injection - Dagger2
//    api "com.google.dagger:dagger:${deps.versions.dagger2}"
//    annotationProcessor "com.google.dagger:dagger-compiler:${deps.versions.dagger2}"
    // Dependency Injection - Dagger2 Android
//    api "com.google.dagger:dagger-android:${deps.versions.dagger2}"
//    annotationProcessor "com.google.dagger:dagger-android-processor:${deps.versions.dagger2}"
    // [end] added in 2020/07/29
}
